<tool id="quantification" name="Quantification" version="@VERSION@.5" profile="17.09">
    <description>Single cell quantification, a module for single-cell data extraction given a segmentation mask and multi-channel image.</description>
    <macros>
        <import>macros.xml</import>
    </macros>
 
    <expand macro="requirements"/>
    @VERSION_CMD@

    <command detect_errors="exit_code"><![CDATA[
    ln -s '$image' '${image.name}'.ome.tiff;
    ln -s '$primary_mask' '${primary_mask.name}'.ome.tiff; 
    #for $mask in $supp_masks:
    ln -s '$mask' '${mask.name}'.ome.tiff;
    #end for

    mkdir ./tool_out;

    @CMD_BEGIN@
    
    --masks 
    '${primary_mask.name}'.ome.tiff
    #if $supp_masks
    #for $mask in $supp_masks:
    '${mask.name}'.ome.tiff
    #end for
    #end if

    --image '${image.name}'.ome.tiff
    --output ./tool_out
    --channel_names '$channel_names';

    mv ./tool_out/*.csv ./tool_out/quantified.csv;
    ]]></command>

    <inputs>
        <param name="image" type="data" format="tiff" label="Registered TIFF"/>
        <param name="primary_mask" type="data" format="tiff" label="Primary Cell Mask"/>
        <param name="supp_masks" type="data" multiple="true" optional="true" format="tiff" label="Additional Cell Masks"/>
        <param name="channel_names" type="data" format="csv" label="Marker Channels"/>
    </inputs>

    <outputs>
        <data format="csv" name="quant_out" from_work_dir="./tool_out/quantified.csv" label="${tool.name} on ${on_string}"/>
    </outputs>
    <help><![CDATA[
# Single cell quantification
Module for single-cell data extraction given a segmentation mask and multi-channel image. The CSV structure is aligned with histoCAT output.

**CommandSingleCellExtraction.py**:

* `--masks` Paths to where masks are stored (Ex: ./segmentation/cellMask.tif) -> If multiple masks are selected the first mask will be used for spatial feature extraction but all will be quantified

* `--image` Path to image(s) for quantification.  (Ex: ./registration/*.h5) -> works with .h(df)5 or .tif(f)

* `--output` Path to output directory. (Ex: ./feature_extraction)

* `--channel_names` csv file containing the channel names for the z-stack (Ex: ./my_channels.csv)

# Run script
`python CommandSingleCellExtraction.py --masks ./segmentation/cellMask.tif ./segmentation/membraneMask.tif --image ./registration/Exemplar_001.h5  --output ./feature_extraction --channel_names ./my_channels.csv`

# Main developer
Denis Schapiro (https://github.com/DenisSch)

Joshua Hess (https://github.com/JoshuaHess12)

Jeremy Muhlich (https://github.com/jmuhlich)
    ]]></help>
    <expand macro="citations" />
</tool>
